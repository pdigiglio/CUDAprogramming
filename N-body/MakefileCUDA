COMMONFLAGS =

CUDAFLAGS = -Xcompiler -fopenmp -arch=sm_20 -I/usr/local/cuda/samples/common/inc/ -m64 -D_DEBUG # --optimize 2 
CXXFLAGS  = -fopenmp -Wall

CPPFLAGS  =  $(COMMONFLAGS) $(CUDAFLAGS)

OFLAGS      = -c
CUDAOFLAGS  = -x cu -dc
OBJECTFLAGS = $(COMMONFLAGS) $(CUDAOFLAGS)

CXX=nvcc

.PHONY: clean distclean doc docshow

main: $(patsubst %.cu,%.o,$(wildcard *.cu)) $(patsubst %.c,%.o,$(wildcard *.c)) $(patsubst %.cc,%.o,$(wildcard *.cc))
	$(CXX) $(CPPFLAGS) $+ -o $@

# want to build again modules even if (only) header is changed
%.o: %.cc %.h MakefileCUDA
	$(CXX) $(CPPFLAGS) $(OBJECTFLAGS) $< -o $@

%.o: %.c MakefileCUDA
	$(CXX) $(CPPFLAGS) $(OBJECTFLAGS) $< -o $@

%.o: %.cu MakefileCUDA
	$(CXX) $(CPPFLAGS) $(OBJECTFLAGS) $< -o $@

# generate documentation with doxygen
doc:
	doxygen && make -C latex

docshow: doc
	evince latex/refman.pdf

clean:
	rm --recursive --verbose --force *.o

distclean: clean
	rm --recursive --verbose --force main
